# Scanitz API - Docker Compose Configuration
# Ambiente completo com API e serviços de suporte

version: "3.8"

services:
  # ==================== SCANITZ API ====================
  scanitz-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: scanitz-api
    restart: unless-stopped

    # Configuração de portas
    ports:
      - "${PORT:-3000}:${PORT:-3000}"

    # Variáveis de ambiente do arquivo .env
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - FIREBASE_SERVICE_ACCOUNT=${FIREBASE_SERVICE_ACCOUNT}
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS}
      - FIREBASE_DATABASE_URL=${FIREBASE_DATABASE_URL}

    # Volumes para logs e persistência
    volumes:
      - ./logs:/app/logs
      - /etc/localtime:/etc/localtime:ro

    # Health check
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:${PORT:-3000}/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Limites de recursos
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.5"
          memory: 256M

    # Configurações de rede
    networks:
      - scanitz-network

    # Labels para organização
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.scanitz-api.rule=Host(`api.scanitz.local`)"
      - "traefik.http.services.scanitz-api.loadbalancer.server.port=${PORT:-3000}"
      - "app.name=scanitz-api"
      - "app.version=1.0.0"

  # ==================== NGINX REVERSE PROXY (Opcional) ====================
  nginx:
    image: nginx:alpine
    container_name: scanitz-nginx
    restart: unless-stopped

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx

    depends_on:
      - scanitz-api

    networks:
      - scanitz-network

    labels:
      - "app.name=scanitz-nginx"
      - "app.version=1.0.0"

  # ==================== MONITORING (Opcional) ====================
  prometheus:
    image: prom/prometheus:latest
    container_name: scanitz-prometheus
    restart: unless-stopped

    ports:
      - "9090:9090"

    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus

    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"

    networks:
      - scanitz-network

    profiles:
      - monitoring

# ==================== NETWORKS ====================
networks:
  scanitz-network:
    driver: bridge
    name: scanitz-network

# ==================== VOLUMES ====================
volumes:
  prometheus-data:
    driver: local
